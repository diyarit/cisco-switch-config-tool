name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. v1.0.0)'
        required: true
        default: 'v1.0.0'

# This workflow runs on GitHub-hosted runners

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write # Needed for softprops/action-gh-release

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller # Ensure pyinstaller is installed

    - name: Create empty config files
      run: |
        New-Item -Path "port_configs.json" -ItemType File -Force -Value "{}"
        New-Item -Path "global_configs.json" -ItemType File -Force -Value "{}"

    - name: Create version info file
      shell: pwsh
      run: |
        $versionInput = "${{ github.event.inputs.version || github.ref_name }}"
        $version = $versionInput -replace '^v','' -split '\.'
        while ($version.Length -lt 4) { $version += '0' }
        $fileVersionStr = "$($version[0]).$($version[1]).$($version[2])"
        $productVersionStr = $fileVersionStr
        $companyName = "Network Solutions"
        $fileDescription = "Cisco Switch Configuration Tool"
        $internalName = "CiscoConfigTool"
        $legalCopyright = "Â© $(Get-Date -Format yyyy) $companyName"
        $originalFilename = "CiscoConfigTool.exe"
        $productName = "Cisco Configuration Tool"

        $versionInfo = @"
# UTF-8
VSVersionInfo(
  ffi=FixedFileInfo(
    filevers=($($version[0]), $($version[1]), $($version[2]), $($version[3])),
    prodvers=($($version[0]), $($version[1]), $($version[2]), $($version[3])),
    mask=0x3f,
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
    ),
  kids=[
    StringFileInfo(
      [
      StringTable(
        u'040904B0', # Lang='en_US', CharSet='utf-16' "Unicode"
        [StringStruct(u'CompanyName', u'$companyName'),
        StringStruct(u'FileDescription', u'$fileDescription'),
        StringStruct(u'FileVersion', u'$fileVersionStr'),
        StringStruct(u'InternalName', u'$internalName'),
        StringStruct(u'LegalCopyright', u'$legalCopyright'),
        StringStruct(u'OriginalFilename', u'$originalFilename'),
        StringStruct(u'ProductName', u'$productName'),
        StringStruct(u'ProductVersion', u'$productVersionStr')])
      ]
    ),
    VarFileInfo([VarStruct(u'Translation', [1033, 1200])]) # English, Unicode
  ]
)
"@
        $versionInfo | Out-File -Encoding UTF8 version_info.txt
        Write-Host "Generated version_info.txt for version $fileVersionStr"

    - name: Build executable with PyInstaller
      shell: pwsh
      run: |
        pyinstaller --noconfirm \
          --onefile \
          --windowed \
          --icon=NONE \
          --version-file version_info.txt \
          --add-data "port_configs.json;." \
          --add-data "global_configs.json;." \
          --name CiscoConfigTool \
          CiscoConfigTool_v5.py

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body: |
          # Cisco Configuration Tool Release ${{ github.ref_name }}

          ## What's New
          - Automated release build via GitHub Actions
          - Windows executable package

          ## Installation
          1. Download the `CiscoConfigTool-${{ github.ref_name }}.exe` file below.
          2. Run the program directly - no installation needed.

          ## Notes
          - Windows 10/11 compatible.
          - No Python installation required on the target machine.
        files: dist/CiscoConfigTool.exe
        asset_name: CiscoConfigTool-${{ github.ref_name }}.exe # Custom asset name
        draft: false
        prerelease: false
